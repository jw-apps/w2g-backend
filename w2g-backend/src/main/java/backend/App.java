/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package backend;

import backend.jdbi.VideoProvider;
import backend.service.ScanService;
import backend.service.VideoService;
import io.dropwizard.Application;
import io.dropwizard.configuration.EnvironmentVariableSubstitutor;
import io.dropwizard.configuration.SubstitutingSourceProvider;
import io.dropwizard.db.DataSourceFactory;
import io.dropwizard.jdbi3.JdbiFactory;
import io.dropwizard.jdbi3.bundles.JdbiExceptionsBundle;
import io.dropwizard.jersey.jackson.JsonProcessingExceptionMapper;
import io.dropwizard.migrations.MigrationsBundle;
import io.dropwizard.setup.Bootstrap;
import io.dropwizard.setup.Environment;
import io.dropwizard.websockets.WebsocketBundle;
import org.jdbi.v3.core.Jdbi;

public class App extends Application<W2GConfiguration> {

    public void initialize(Bootstrap<W2GConfiguration> bootstrap) {
        bootstrap.setConfigurationSourceProvider(
                new SubstitutingSourceProvider(bootstrap.getConfigurationSourceProvider(),
                        new EnvironmentVariableSubstitutor(true)
                )
        );
        bootstrap.addBundle(new WebsocketBundle(Websocket.class));
        bootstrap.addBundle(new MigrationsBundle<W2GConfiguration>() {
            @Override
            public DataSourceFactory getDataSourceFactory(W2GConfiguration configuration) {
                return configuration.getDataSourceFactory();
            }
        });
        bootstrap.addBundle(new JdbiExceptionsBundle());
    }

    @Override
    public void run(W2GConfiguration configuration, Environment environment) throws Exception {
        environment.jersey().register(new JsonProcessingExceptionMapper(true));
        final JdbiFactory factory = new JdbiFactory();
        final Jdbi jdbi = factory.build(environment, configuration.getDataSourceFactory(), "mysql");

        VideoProvider videoProvider = jdbi.onDemand(VideoProvider.class);

        environment.jersey().register(new ScanService(configuration.getMediaFolder(), videoProvider));
        environment.jersey().register(new VideoService(videoProvider, configuration.getMediaFolder(), configuration.getChunkSize()));

        environment.jersey().register(new ContainerFilter());
    }

    public static void main(String[] args) throws Exception {
        new App().run(args);
    }
}
